{"version":3,"sources":["assignment/Header/index.js","assignment/ResourceCard/index.js","assignment/LoadingView/index.js","assignment/SomethingWentWrong/index.js","assignment/Pagination/index.js","assignment/Home/index.js","assignment/ReactTable/index.js","assignment/PopUp/index.js","assignment/Resource/index.js","assignment/AddItem/index.js","assignment/Login/index.js","App.js","index.js"],"names":["withRouter","props","className","src","alt","type","onClick","history","replace","ResourceCard","details","this","iconUrl","title","category","link","description","id","to","href","target","rel","Component","LoadingView","color","height","width","SomethingWentWrong","Pagination","pageHandler","pageCount","Math","ceil","length","pageNumbers","i","push","breakLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","activeClassName","breakLinkClassName","pageLinkClassName","nextLinkClassName","previousLinkClassName","loadingStatus","tabsList","name","TabItem","onClickTab","isActive","tabStyling","Home","state","resourcesList","activeTabId","searchInput","isLoading","pageNumber","getResources","options","method","fetch","response","json","data","ok","updatedData","map","item","tag","icon_url","setState","status","onChangeSearchInput","value","renderTabsList","eachTab","renderSearchInput","placeholder","onChange","renderPagination","renderResourcesList","filteredList","filter","searchFilteredList","toLowerCase","includes","perPageList","slice","renderHomeContainer","loadingBasedRender","Table","columns","itemChecked","itemUnchecked","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","onItemChecked","checked","headerGroup","uuidv4","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","key","cells","cell","Header","dataId","getCellProps","ReactTable","accessor","sortTypeList","PopUp","sortFunctionality","trigger","Resource","resourceData","resourceItemsList","checkedList","sortedResults","getResourceDetails","match","params","url","resourceItems","resource_items","updatedResources","searchFiltering","newFilteredList","sort","a","b","textA","toUpperCase","textB","dateA","Date","createdAt","dateB","onClickUpdate","console","log","onClickAddBtn","prevState","pop","renderSort","renderResourceContent","len","addBtnStyling","deleteBtnStyling","initialState","itemName","linkText","resourceName","fieldsError","APIStatus","AddItem","itemAdded","onChangeItemName","onChangeLinkText","onChangeResourceName","onChangeDescription","onClickAddMore","onSubmitForm","preventDefault","resource","renderItemName","itemNameError","htmlFor","renderLinkText","renderResourceName","renderDescription","renderSuccessView","renderCreateButton","renderErrorMessage","renderForm","onSubmit","Login","errorMsg","username","password","onChangePassword","onChangeUsername","renderHeading","renderUsername","renderPassword","renderLoginButton","App","exact","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26fa04ac.chunk.js","sourcesContent":["import {withRouter} from 'react-router-dom'\nimport {BiLogOut} from 'react-icons/bi'\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    const {history} = props\n    history.replace('/login')\n  }\n\n  return (\n    <div>\n      <div className=\"header-container\">\n        <img\n          src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666363620/Assignment/NxtWave_TM_Coloured_logo_1-Nxt-wave-logo_obwxjx.svg\"\n          alt=\"nxt-wave logo\"\n          className=\"header-logo\"\n        />\n        <div className=\"profile-logout-container\">\n          <img\n            src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666364475/Assignment/S-profile-pic_m4pc9l.svg\"\n            alt=\"profile\"\n            className=\"header-profile-pic\"\n          />\n          <button\n            type=\"button\"\n            className=\"logout-button\"\n            onClick={onClickLogout}\n          >\n            <BiLogOut className=\"logout-icon\" />\n          </button>\n        </div>\n      </div>\n\n      <hr className=\"header-line\" />\n    </div>\n  )\n}\n\nexport default withRouter(Header)\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport './index.css'\n\nclass ResourceCard extends Component {\n  render() {\n    const {details} = this.props\n    const {iconUrl, title, category, link, description, id} = details\n    return (\n      <Link to={`/resource/${id}`} className=\"resource-list-item\">\n        <li>\n          <div className=\"resource-card-header\">\n            <div className=\"icon-container\">\n              <img src={iconUrl} alt=\"icon\" className=\"resource-icon\" />\n            </div>\n            <div>\n              <h1 className=\"resource-card-heading\">{title}</h1>\n              <p className=\"resource-card-category\">{category}</p>\n            </div>\n          </div>\n          <a href={link} target=\"_blank\" rel=\"noreferrer\" className=\"link-item\">\n            {link}\n          </a>\n          <p className=\"resource-item-description\">{description}</p>\n        </li>\n      </Link>\n    )\n  }\n}\n\nexport default ResourceCard\n","import Loader from 'react-loader-spinner'\nimport './index.css'\n\nconst LoadingView = () => (\n  <div className=\"loader-container\">\n    <Loader type=\"TailSpin\" color=\"blue\" height=\"50\" width=\"50\" />\n  </div>\n)\n\nexport default LoadingView\n","import './index.css'\n\nconst SomethingWentWrong = () => (\n  <div className=\"failed-container\">\n    <img\n      src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666114660/Instagram%20Clone/Group_7522-something-wrong_j6dyks.svg\"\n      alt=\"failed\"\n      className=\"failed-image\"\n    />\n    <p className=\"failed-text\">Something went wrong. Please try again</p>\n  </div>\n)\n\nexport default SomethingWentWrong\n","import ReactPaginate from 'react-paginate'\nimport './index.css'\n\nconst Pagination = props => {\n  const {details, pageHandler} = props\n  const pageCount = Math.ceil(details.length / 6)\n  const pageNumbers = []\n  for (let i = 1; i < Math.ceil(details.length / 6); i += 1) {\n    pageNumbers.push(i)\n  }\n\n  const handlePageClick = event => {\n    pageHandler(event.selected + 1)\n  }\n\n  return (\n    <ReactPaginate\n      breakLabel=\"...\"\n      nextLabel=\">\"\n      onPageChange={handlePageClick}\n      pageRangeDisplayed={1}\n      marginPagesDisplayed={1}\n      pageCount={pageCount}\n      previousLabel=\"<\"\n      renderOnZeroPageCount={null}\n      containerClassName=\"pagination-container\"\n      activeClassName=\"active-link\"\n      breakLinkClassName=\"break-page\"\n      pageLinkClassName=\"page-link\"\n      nextLinkClassName=\"next-link\"\n      previousLinkClassName=\"next-link\"\n    />\n  )\n}\n\nexport default Pagination\n","import {Component} from 'react'\nimport Header from '../Header'\nimport ResourceCard from '../ResourceCard'\nimport LoadingView from '../LoadingView'\nimport SomethingWentWrong from '../SomethingWentWrong'\nimport Pagination from '../Pagination'\nimport './index.css'\n\nconst loadingStatus = {\n  loading: 'LOADING',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst tabsList = [\n  {id: 'resource', name: 'Resources'},\n  {id: 'request', name: 'Requests'},\n  {id: 'user', name: 'Users'},\n]\n\nconst TabItem = props => {\n  const {details, onClickTab, isActive} = props\n  const {name, id} = details\n  const tabStyling = isActive ? `active-tab` : `tab-button`\n  const tabClicked = () => {\n    onClickTab(id)\n  }\n\n  return (\n    <li>\n      <button type=\"button\" className={tabStyling} onClick={tabClicked}>\n        {name}\n      </button>\n    </li>\n  )\n}\n\nclass Home extends Component {\n  state = {\n    resourcesList: [],\n    activeTabId: 'resource',\n    searchInput: '',\n    isLoading: loadingStatus.loading,\n    pageNumber: 1,\n  }\n\n  componentDidMount() {\n    this.getResources()\n  }\n\n  getResources = async () => {\n    const url =\n      'https://media-content.ccbp.in/website/react-assignment/resources.json'\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      const updatedData = data.map(item => ({\n        category: item.category,\n        description: item.description,\n        id: item.id,\n        link: item.link,\n        title: item.title,\n        tag: item.tag,\n        iconUrl: item.icon_url,\n      }))\n      this.setState({\n        resourcesList: updatedData,\n        isLoading: loadingStatus.success,\n      })\n    } else if (response.status >= 400) {\n      this.setState({isLoading: loadingStatus.failure})\n    }\n  }\n\n  pageHandler = pageNumber => {\n    this.setState({\n      pageNumber,\n    })\n  }\n\n  onClickTab = id => {\n    this.setState({activeTabId: id})\n  }\n\n  onChangeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  renderTabsList = () => {\n    const {activeTabId} = this.state\n    return (\n      <ul className=\"tabs-list\">\n        {tabsList.map(eachTab => (\n          <TabItem\n            details={eachTab}\n            key={eachTab.id}\n            onClickTab={this.onClickTab}\n            isActive={eachTab.id === activeTabId}\n          />\n        ))}\n      </ul>\n    )\n  }\n\n  renderSearchInput = () => {\n    const {searchInput} = this.state\n    return (\n      <div className=\"search-input-container\">\n        <img\n          src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666368809/Assignment/Icon-search-icon_hnpeap.svg\"\n          alt=\"search icon\"\n          className=\"search-icon\"\n        />\n        <input\n          type=\"search\"\n          placeholder=\"Search\"\n          className=\"search-input\"\n          onChange={this.onChangeSearchInput}\n          value={searchInput}\n        />\n      </div>\n    )\n  }\n\n  renderPagination = details => (\n    <div className=\"pagination-container\">\n      <Pagination pageHandler={this.pageHandler} details={details} />\n    </div>\n  )\n\n  renderResourcesList = () => {\n    const {resourcesList, activeTabId, searchInput, pageNumber} = this.state\n    let filteredList = []\n    switch (activeTabId) {\n      case 'request':\n        filteredList = resourcesList.filter(item => item.tag === 'request')\n        break\n      case 'user':\n        filteredList = resourcesList.filter(item => item.tag === 'user')\n        break\n      default:\n        filteredList = resourcesList\n    }\n\n    const searchFilteredList = filteredList.filter(item =>\n      item.title.toLowerCase().includes(searchInput.toLowerCase()),\n    )\n\n    const perPageList = searchFilteredList.slice(\n      (pageNumber - 1) * 6,\n      pageNumber * 6,\n    )\n\n    return (\n      <div className=\"resources-container\">\n        {this.renderSearchInput()}\n        <ul className=\"resources-list\">\n          {perPageList.map(item => (\n            <ResourceCard details={item} key={item.id} />\n          ))}\n        </ul>\n        {this.renderPagination(searchFilteredList)}\n      </div>\n    )\n  }\n\n  renderHomeContainer = () => (\n    <div className=\"home-container\">\n      {this.renderTabsList()}\n      {this.renderResourcesList()}\n    </div>\n  )\n\n  loadingBasedRender = () => {\n    const {isLoading} = this.state\n    switch (isLoading) {\n      case loadingStatus.loading:\n        return <LoadingView />\n      case loadingStatus.success:\n        return this.renderHomeContainer()\n      default:\n        return <SomethingWentWrong />\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {this.loadingBasedRender()}\n      </>\n    )\n  }\n}\n\nexport default Home\n","import {useTable} from 'react-table'\nimport {v4 as uuidv4} from 'uuid'\nimport './index.css'\n\nconst Table = props => {\n  const {columns, data, itemChecked, itemUnchecked} = props\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  })\n\n  const onItemChecked = event => {\n    if (event.target.checked) {\n      itemChecked(event.target.value)\n    } else {\n      itemUnchecked(event.target.value)\n    }\n  }\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()} className=\"table\">\n      <thead>\n        {headerGroups.map(headerGroup => {\n          const headerId = uuidv4()\n          return (\n            <tr {...headerGroup.getHeaderGroupProps()} className=\"row\">\n              <th className=\"table-headers\"> </th>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()} className=\"table-headers\">\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          )\n        })}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map(row => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()} key={row.id}>\n              <td className=\"data-cell\">\n                <input\n                  type=\"checkbox\"\n                  className=\"checkbox\"\n                  onChange={onItemChecked}\n                  value={row.id}\n                />\n              </td>\n              {row.cells.map(cell => {\n                const {Header} = cell.column\n\n                const dataId = uuidv4()\n\n                return (\n                  <>\n                    <td\n                      {...cell.getCellProps()}\n                      key={dataId}\n                      className=\"data-cell\"\n                    >\n                      {Header === 'Link' ? (\n                        <a\n                          href={cell.value}\n                          className=\"link-text-styling\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {cell.render('Cell')}\n                        </a>\n                      ) : (\n                        <>{cell.render('Cell')}</>\n                      )}\n                    </td>\n                  </>\n                )\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nconst ReactTable = props => {\n  const columns = [\n    {Header: 'Title', accessor: 'title'},\n    {Header: 'Description', accessor: 'description'},\n    {Header: 'Link', accessor: 'link'},\n  ]\n\n  const {details, itemChecked, itemUnchecked} = props\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        data={details}\n        itemChecked={itemChecked}\n        itemUnchecked={itemUnchecked}\n      />\n    </div>\n  )\n}\n\nexport default ReactTable\n","import Popup from 'reactjs-popup'\n\nimport 'reactjs-popup/dist/index.css'\n\nimport './index.css'\n\nconst sortTypeList = [\n  {id: 'recentlyAdded', name: 'Recently Added'},\n  {id: 'ascending', name: 'Ascending'},\n  {id: 'descending', name: 'Descending'},\n]\n\nconst PopUp = props => {\n  const {sortFunctionality} = props\n\n  return (\n    <div className=\"popup-container\">\n      <Popup\n        trigger={\n          <button className=\"trigger-button\" type=\"button\">\n            Sort\n          </button>\n        }\n      >\n        <ul className=\"popped-container\">\n          {sortTypeList.map(item => (\n            <li key={item.id} className=\"pop-up-item\">\n              <button\n                type=\"button\"\n                className=\"sorting-button\"\n                onClick={() => sortFunctionality(item.id)}\n              >\n                {item.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </Popup>\n    </div>\n  )\n}\nexport default PopUp\n","import {Component} from 'react'\n\nimport Header from '../Header'\nimport ReactTable from '../ReactTable'\nimport Pagination from '../Pagination'\nimport PopUp from '../PopUp'\nimport LoadingView from '../LoadingView'\nimport SomethingWentWrong from '../SomethingWentWrong'\nimport './index.css'\n\nconst loadingStatus = {\n  loading: 'LOADING',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Resource extends Component {\n  state = {\n    resourceData: {},\n    resourceItemsList: [],\n    perPageList: [],\n    searchFilteredList: [],\n    checkedList: [],\n    sortedResults: [],\n    searchInput: '',\n    isLoading: loadingStatus.loading,\n  }\n\n  componentDidMount() {\n    this.getResourceDetails()\n  }\n\n  getResourceDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const url = `https://media-content.ccbp.in/website/react-assignment/resource/${id}.json`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      const updatedData = {\n        description: data.description,\n        id: data.id,\n        link: data.link,\n        iconUrl: data.icon_url,\n        resourceItems: data.resource_items,\n        title: data.title,\n      }\n      const updatedResources = data.resource_items.map(item => ({\n        ...item,\n        description: item.description.slice(0, 100),\n      }))\n\n      this.setState({\n        resourceData: updatedData,\n        resourceItemsList: updatedResources,\n        perPageList: updatedResources.slice(0, 6),\n        searchFilteredList: updatedResources,\n        sortedResults: updatedResources,\n        isLoading: loadingStatus.success,\n      })\n    } else if (response.status === 400) {\n      this.setState({isLoading: loadingStatus.failure})\n    }\n  }\n\n  onChangeSearchInput = event => {\n    this.setState(\n      {searchInput: event.target.value},\n      this.searchFiltering(event),\n    )\n  }\n\n  searchFiltering = event => {\n    const {sortedResults} = this.state\n    const newFilteredList = sortedResults.filter(item =>\n      item.title.toLowerCase().includes(event.target.value.toLowerCase()),\n    )\n    this.setState({\n      searchFilteredList: newFilteredList,\n      perPageList: newFilteredList.slice(0, 6),\n    })\n  }\n\n  sortFunctionality = type => {\n    const {resourceItemsList} = this.state\n    switch (type) {\n      case 'ascending':\n        resourceItemsList.sort((a, b) => {\n          const textA = a.title.toUpperCase()\n          const textB = b.title.toUpperCase()\n          if (textA < textB) {\n            return -1\n          }\n          if (textA > textB) {\n            return 1\n          }\n          return 0\n        })\n        this.setState({\n          sortedResults: resourceItemsList,\n          perPageList: resourceItemsList.slice(0, 6),\n        })\n        break\n      case 'descending':\n        resourceItemsList.sort((a, b) => {\n          const textA = a.title.toUpperCase()\n          const textB = b.title.toUpperCase()\n          if (textA < textB) {\n            return 1\n          }\n          if (textA > textB) {\n            return -1\n          }\n          return 0\n        })\n        this.setState({\n          sortedResults: resourceItemsList,\n          perPageList: resourceItemsList.slice(0, 6),\n        })\n        break\n      case 'recentlyAdded':\n        resourceItemsList.sort((a, b) => {\n          const dateA = new Date(a.createdAt)\n          const dateB = new Date(b.createdAt)\n          if (dateA > dateB) {\n            return 1\n          }\n          if (dateA < dateB) {\n            return -1\n          }\n          return 0\n        })\n        this.setState({\n          sortedResults: resourceItemsList,\n          perPageList: resourceItemsList.slice(0, 6),\n        })\n        break\n      default:\n        this.setState({sortedResults: resourceItemsList})\n    }\n  }\n\n  onClickUpdate = async () => {\n    const url =\n      'https://media-content.ccbp.in/website/react-assignment/resource/update.json'\n    const options = {method: 'GET'}\n    const response = await fetch(url, options)\n    console.log(response.status)\n  }\n\n  onClickAddBtn = () => {\n    const {history} = this.props\n    history.push('/add-item')\n  }\n\n  itemUnchecked = () => {\n    this.setState(prevState => {\n      const {checkedList} = prevState\n      checkedList.pop()\n      return {checkedList: [...checkedList]}\n    })\n  }\n\n  itemChecked = item => {\n    this.setState(prevState => ({\n      checkedList: [...prevState.checkedList, item],\n    }))\n  }\n\n  renderSearchInput = () => {\n    const {searchInput} = this.state\n    return (\n      <div className=\"resource-search-input-container\">\n        <img\n          src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666368809/Assignment/Icon-search-icon_hnpeap.svg\"\n          alt=\"search icon\"\n          className=\"resource-search-icon\"\n        />\n        <input\n          type=\"search\"\n          placeholder=\"Search\"\n          className=\"resource-search-input\"\n          value={searchInput}\n          onChange={this.onChangeSearchInput}\n        />\n      </div>\n    )\n  }\n\n  renderSort = () => (\n    <div className=\"sort-container\">\n      <img\n        src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666380308/Assignment/Icon-sort-icon_wccxrk.svg\"\n        alt=\"sort icon\"\n        className=\"sort-icon\"\n      />\n      <PopUp sortFunctionality={this.sortFunctionality} />\n    </div>\n  )\n\n  pageHandler = pageNumber => {\n    const {sortedResults} = this.state\n    this.setState({\n      perPageList: sortedResults.slice((pageNumber - 1) * 6, pageNumber * 6),\n    })\n  }\n\n  renderResourceContent = () => {\n    const {\n      resourceData,\n      searchFilteredList,\n      perPageList,\n      checkedList,\n    } = this.state\n\n    const len = checkedList.length\n    const addBtnStyling = len === 0 ? 'active-button' : null\n    const deleteBtnStyling = len === 0 ? null : 'delete-button'\n\n    const {iconUrl, title, id, link, description} = resourceData\n    return (\n      <div className=\"resource-content-container\">\n        <div className=\"sub-resource-container\">\n          <div className=\"resource-page-header\">\n            <div className=\"back-to-resources-container\">\n              <img\n                src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666377476/Assignment/Icon-back-icon_acf1ue.svg\"\n                alt=\"back icon\"\n                className=\"back-icon\"\n              />\n              <p className=\"back-to-resources\">Resources</p>\n            </div>\n            <div className=\"resource-icon-heading-container\">\n              <div className=\"resource-icon-container\">\n                <img\n                  src={iconUrl}\n                  alt=\"resource icon\"\n                  className=\"resource-page-icon\"\n                />\n              </div>\n              <div className=\"resource-heading-container\">\n                <h1 className=\"resource-heading\">{title}</h1>\n                <p className=\"resource-page-id\">{id}</p>\n                <a\n                  href={link}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className=\"resource-page-link\"\n                >\n                  {link}\n                </a>\n              </div>\n            </div>\n            <p className=\"resource-page-description\">{description}</p>\n            <button\n              type=\"button\"\n              className=\"update-button\"\n              onClick={this.onClickUpdate}\n            >\n              UPDATE\n            </button>\n          </div>\n          <div className=\"resource-search-container\">\n            <p className=\"items-heading\">Items</p>\n            <div className=\"resource-search-sort-container\">\n              {this.renderSearchInput()}\n              {this.renderSort()}\n            </div>\n          </div>\n          <ReactTable\n            details={perPageList}\n            itemChecked={this.itemChecked}\n            itemUnchecked={this.itemUnchecked}\n          />\n          <div className=\"resource-footer-container\">\n            <div className=\"buttons-container\">\n              <button\n                type=\"button\"\n                onClick={this.onClickAddBtn}\n                className={`button ${addBtnStyling}`}\n              >\n                ADD ITEM\n              </button>\n              <button type=\"button\" className={`button ${deleteBtnStyling}`}>\n                DELETE\n              </button>\n            </div>\n            <Pagination\n              details={searchFilteredList}\n              pageHandler={this.pageHandler}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  loadingBasedRender = () => {\n    const {isLoading} = this.state\n    switch (isLoading) {\n      case loadingStatus.loading:\n        return <LoadingView />\n      case loadingStatus.success:\n        return this.renderResourceContent()\n      default:\n        return <SomethingWentWrong />\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        {this.loadingBasedRender()}\n      </>\n    )\n  }\n}\n\nexport default Resource\n","import {Component} from 'react'\nimport {v4 as uuidv4} from 'uuid'\nimport Header from '../Header'\n\nimport './index.css'\n\nconst initialState = {\n  itemName: '',\n  linkText: '',\n  resourceName: '',\n  description: '',\n  fieldsError: '',\n  APIStatus: 'Loading...',\n}\n\nclass AddItem extends Component {\n  state = {...initialState, itemAdded: false}\n\n  onChangeItemName = event => {\n    this.setState({itemName: event.target.value})\n  }\n\n  onChangeLinkText = event => {\n    this.setState({linkText: event.target.value})\n  }\n\n  onChangeResourceName = event => {\n    this.setState({resourceName: event.target.value})\n  }\n\n  onChangeDescription = event => {\n    this.setState({description: event.target.value})\n  }\n\n  onClickAddMore = () => {\n    this.setState({itemAdded: false})\n  }\n\n  onSubmitForm = async event => {\n    const {itemName, linkText, resourceName, description} = this.state\n    const createdAt = new Date()\n    event.preventDefault()\n    if (\n      itemName !== '' &&\n      linkText !== '' &&\n      resourceName !== '' &&\n      description !== ''\n    ) {\n      const newItem = {\n        id: uuidv4(),\n        createdAt,\n        title: itemName,\n        link: linkText,\n        resource: resourceName,\n      }\n      const url =\n        'https://media-content.ccbp.in/website/react-assignment/add_resource.json'\n\n      const response = await fetch(url)\n      if (response.status === 200) {\n        this.setState({\n          ...initialState,\n          APIStatus: 'Item Added Successfully.',\n          itemAdded: true,\n        })\n      } else if (response.status === 400) {\n        this.setState({\n          fieldsError: '*Client Side Error',\n          APIStatus: 'Client Side Error',\n        })\n      }\n    } else {\n      this.setState({fieldsError: '*All fields are mandatory '})\n    }\n  }\n\n  renderItemName = () => {\n    const {itemName, itemNameError} = this.state\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"ItemName\" className=\"label-text\">\n          ITEM NAME\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Item Name\"\n          id=\"ItemName\"\n          className=\"add-item-input-field\"\n          value={itemName}\n          onChange={this.onChangeItemName}\n        />\n        {itemNameError && <p className=\"error-message\">{itemNameError}</p>}\n      </div>\n    )\n  }\n\n  renderLinkText = () => {\n    const {linkText} = this.state\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"LinkText\" className=\"label-text\">\n          LINK\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter The Link\"\n          id=\"LinkText\"\n          className=\"add-item-input-field\"\n          value={linkText}\n          onChange={this.onChangeLinkText}\n        />\n      </div>\n    )\n  }\n\n  renderResourceName = () => {\n    const {resourceName} = this.state\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"ResourceName\" className=\"label-text\">\n          RESOURCE NAME\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter The Resource Name\"\n          id=\"ResourceName\"\n          className=\"add-item-input-field\"\n          value={resourceName}\n          onChange={this.onChangeResourceName}\n        />\n      </div>\n    )\n  }\n\n  renderDescription = () => {\n    const {description} = this.state\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"ItemName\" className=\"label-text\">\n          DESCRIPTION\n        </label>\n        <textarea\n          type=\"text\"\n          placeholder=\"Enter The Description\"\n          className=\"description-field\"\n          value={description}\n          onChange={this.onChangeDescription}\n        />\n      </div>\n    )\n  }\n\n  renderSuccessView = () => (\n    <div className=\"success-container\">\n      <p className=\"success-message\">Item Added Successfully</p>\n      <button\n        type=\"button\"\n        className=\"create-button\"\n        onClick={this.onClickAddMore}\n      >\n        ADD MORE\n      </button>\n    </div>\n  )\n\n  renderCreateButton = () => (\n    <div className=\"create-btn-container\">\n      {this.renderErrorMessage()}\n      <button type=\"submit\" className=\"create-button\">\n        CREATE\n      </button>\n    </div>\n  )\n\n  renderErrorMessage = () => {\n    const {fieldsError} = this.state\n    return <p className=\"error-message\">{fieldsError}</p>\n  }\n\n  renderForm = () => (\n    <form className=\"form-container\" onSubmit={this.onSubmitForm}>\n      <h1 className=\"form-heading\">Item Details</h1>\n      {this.renderItemName()}\n      {this.renderLinkText()}\n      {this.renderResourceName()}\n      {this.renderDescription()}\n      {this.renderCreateButton()}\n    </form>\n  )\n\n  render() {\n    const {APIStatus, itemAdded} = this.state\n    console.log(APIStatus)\n    return (\n      <>\n        <Header />\n        <div className=\"bottom-container\">\n          <div className=\"bottom-left-container\">\n            <div className=\"back-to-users-container\">\n              <img\n                src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666377476/Assignment/Icon-back-icon_acf1ue.svg\"\n                alt=\"back to users\"\n                className=\"back-arrow\"\n              />\n              <p className=\"back-to-users\">Users</p>\n            </div>\n\n            {itemAdded ? this.renderSuccessView() : this.renderForm()}\n          </div>\n          <img\n            src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666468682/Assignment/Group_3-create-item_xz9216.png\"\n            alt=\"create item\"\n            className=\"create-item-image\"\n          />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default AddItem\n","import {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport './index.css'\n\nclass Login extends Component {\n  state = {errorMsg: '', username: '', password: ''}\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onSubmitForm = async event => {\n    const {history} = this.props\n    event.preventDefault()\n    const {username, password} = this.state\n    if (username === '' && password === '') {\n      this.setState({errorMsg: 'Enter Username and Password'})\n    } else if (username !== 'bhargav' && password !== 'bhargav@2021') {\n      this.setState({errorMsg: 'Username or Password is incorrect'})\n    } else if (username === 'bhargav' && password === 'bhargav@2021') {\n      history.replace('/')\n    }\n  }\n\n  renderHeading = () => <h1 className=\"main-heading\">Enter Credentials</h1>\n\n  renderUsername = () => {\n    const {username} = this.state\n    return (\n      <div className=\"username-container\">\n        <label htmlFor=\"username\" className=\"label-text\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"input-field\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={this.onChangeUsername}\n        />\n      </div>\n    )\n  }\n\n  renderPassword = () => {\n    const {password} = this.state\n    return (\n      <div className=\"password-container\">\n        <label htmlFor=\"password\" className=\"label-text\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"input-field\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={this.onChangePassword}\n        />\n      </div>\n    )\n  }\n\n  renderErrorMessage = () => {\n    const {errorMsg} = this.state\n    const errorElement =\n      errorMsg !== '' ? <p className=\"error-msg\">{errorMsg}</p> : null\n    return errorElement\n  }\n\n  renderLoginButton = () => (\n    <div className=\"login-button-container\">\n      <button type=\"submit\" className=\"login-button\">\n        Login\n      </button>\n    </div>\n  )\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={this.onSubmitForm}>\n          {this.renderHeading()}\n          {this.renderUsername()}\n          {this.renderPassword()}\n          {this.renderErrorMessage()}\n          {this.renderLoginButton()}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import {Route, Switch} from 'react-router-dom'\n\nimport Home from './assignment/Home'\nimport Resource from './assignment/Resource'\nimport AddItem from './assignment/AddItem'\nimport Login from './assignment/Login'\n\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/resource/:id\" component={Resource} />\n    <Route exact path=\"/add-item\" component={AddItem} />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}